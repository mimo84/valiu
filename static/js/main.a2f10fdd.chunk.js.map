{"version":3,"sources":["codingChallenge/VirtualScroller.tsx","codingChallenge/CodingChallenge.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VirtualScroller","data","row","scrollPosition","setScrollPosition","maxIndex","length","itemHeight","totalHeight","useState","top","itemsAbove","bottom","viewData","paddingHeight","setPaddingHeight","runScroller","scrollTop","index","Math","floor","tolerance","visualizeData","amount","nuTopPaddingHeight","max","nuBottomPaddingHeight","console","log","scrollElement","current","useRef","useEffect","scrollTo","offset","limit","start","end","min","slice","className","ref","style","height","onScroll","e","currentTarget","map","faker","locale","rndNumber","random","randomColor","initialTags","Array","from","_","i","color","content","words","id","uuid","CodingChallenge","tagAction","nuTags","undefined","editTarget","tags","t","edit","concat","setEdit","setEditTarget","setTags","type","value","autoFocus","onChange","onKeyDown","key","placeholder","v","backgroundColor","onClick","target","find","actionEdit","filter","actionDelete","App","href","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2f10fdd.chunk.js","sourcesContent":["import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { ITag } from './CodingChallenge';\nimport './CodingChallenge.css';\n\ninterface VirtualScrollerProps {\n  data: ITag[];\n  row: (v: ITag, i: number) => JSX.Element;\n  scrollPosition: number;\n  setScrollPosition: Dispatch<SetStateAction<number>>;\n}\n\nconst VirtualScroller: React.FC<VirtualScrollerProps> = ({\n  data,\n  row,\n  scrollPosition,\n  setScrollPosition,\n}) => {\n  const minIndex = 0;\n  const maxIndex = data.length;\n  const startIndex = 1;\n  const itemHeight = 40;\n  const amount = 15;\n  const tolerance = 2;\n\n  // 1) height of the visible part of the viewport (px)\n  const viewportHeight = amount * itemHeight;\n  // 2) total height of rendered and virtualized items (px)\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n\n  // 3) single viewport outlet height, filled with rendered but invisible rows (px)\n  const toleranceHeight = tolerance * itemHeight;\n\n  // 4) all rendered rows height, visible part + invisible outlets (px)\n  // const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  // 5) number of items to be rendered, buffered dataset length (pcs)\n  const bufferedItems = amount + 2 * tolerance;\n\n  // 6) how many items will be virtualized above (pcs)\n  const itemsAbove = startIndex - tolerance - minIndex;\n  // 7) initial height of the top padding element (px)\n  const [paddingHeight, setPaddingHeight] = useState<{\n    top: number;\n    bottom: number;\n    viewData: ITag[];\n  }>({\n    top: itemsAbove * itemHeight,\n    bottom: totalHeight - itemsAbove * itemHeight,\n    viewData: [],\n  });\n\n  const runScroller = (scrollTop: number) => {\n    const index =\n      minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n    const viewData = visualizeData(index, bufferedItems);\n    const nuTopPaddingHeight = Math.max((index - minIndex) * itemHeight, 0);\n    const nuBottomPaddingHeight = Math.max(\n      totalHeight - paddingHeight.top - viewData.length * itemHeight,\n      0\n    );\n    console.log(\n      'run scroller',\n      scrollElement.current?.scrollTop || scrollPosition\n    );\n    setScrollPosition(scrollElement.current?.scrollTop || scrollPosition);\n\n    setPaddingHeight({\n      top: nuTopPaddingHeight,\n      bottom: nuBottomPaddingHeight,\n      viewData: viewData,\n    });\n  };\n\n  const scrollElement = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    runScroller(scrollPosition);\n    scrollElement.current?.scrollTo(0, scrollPosition);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const visualizeData = (offset: number, limit: number) => {\n    const start = Math.max(minIndex, offset);\n    const end = Math.min(offset + limit - 1, maxIndex);\n    if (start > end) {\n      return data.slice(end, start);\n    }\n    return data.slice(start, end);\n  };\n\n  return (\n    <div\n      className=\"viewport\"\n      ref={scrollElement}\n      style={{ height: viewportHeight }}\n      onScroll={(e) => runScroller(e.currentTarget.scrollTop)}\n    >\n      <div style={{ height: paddingHeight.top }}></div>\n      {paddingHeight.viewData.map(row)}\n      <div style={{ height: paddingHeight.bottom }}></div>\n    </div>\n  );\n};\n\nexport default VirtualScroller;\n","import React, { KeyboardEvent, useState } from 'react';\nimport VirtualScroller from './VirtualScroller';\nimport { v4 as uuid } from 'uuid';\nimport faker from 'faker';\nimport { useEffect } from 'react';\n\nfaker.locale = 'pt_BR';\n\nexport interface ITag {\n  color: string;\n  content: string;\n  id: string;\n}\n\nconst rndNumber = () => Math.floor(Math.random() * 255);\nconst randomColor = () =>\n  `rgba(${rndNumber()},${rndNumber()}, ${rndNumber()} )`;\nconst initialTags: ITag[] = Array.from({ length: 10e4 }).map((_, i) => ({\n  color: randomColor(),\n  content: faker.random.words(),\n  id: uuid(),\n}));\n\nconst CodingChallenge: React.FC = () => {\n  const actionDelete = (index: string) => {\n    const nuTags = tags.filter((t) => t.id !== index);\n    setTags(nuTags);\n  };\n\n  const actionEdit = (index: string) => {\n    const target = tags.find((t) => t.id === index);\n    setEdit(target?.content || '');\n    setEditTarget(target);\n  };\n  const onInputEnter = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      tagAction();\n    }\n  };\n\n  const onEditInputChange = (e: any) => {\n    setEdit(e.currentTarget.value);\n  };\n  const tagAction = () => {\n    let nuTags;\n    if (editTarget !== undefined) {\n      nuTags = tags.map((t) => {\n        return t.id === editTarget?.id ? { ...t, content: edit } : t;\n      });\n      setScrollPosition(scrollPosition);\n    } else {\n      const brandNewTag = {\n        color: randomColor(),\n        content: edit,\n        id: uuid(),\n      };\n      nuTags = [brandNewTag].concat(tags);\n      setScrollPosition(0);\n    }\n\n    setEdit('');\n    setEditTarget(undefined);\n    setTags(nuTags);\n  };\n\n  const [tags, setTags] = useState<ITag[]>(initialTags);\n  const [edit, setEdit] = useState('');\n  const [editTarget, setEditTarget] = useState<ITag | undefined>(undefined);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    setTags(tags);\n  }, [tags]);\n\n  const RowTemplate = (v: ITag, i: number) => {\n    return (\n      <div className=\"item-container\" key={`${v.color}_${i}`}>\n        <span\n          className=\"item-color\"\n          style={{\n            backgroundColor: `${v.color}`,\n          }}\n        >\n          &nbsp;\n        </span>\n        <span className=\"item-content\">{v.content}</span>\n        <div className=\"item-actions\">\n          <button className=\"action-button\" onClick={() => actionEdit(v.id)}>\n            Editar\n          </button>\n\n          <button className=\"action-button\" onClick={() => actionDelete(v.id)}>\n            Borrar\n          </button>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <h2>Coding Challenge! (rendering: {tags.length})</h2>\n      <div className=\"container\">\n        <div className=\"tag-list\">Etiquetas</div>\n\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={edit}\n          autoFocus\n          onChange={onEditInputChange}\n          onKeyDown={onInputEnter}\n          placeholder=\"Añadir etiqueta\"\n        />\n\n        <VirtualScroller\n          scrollPosition={scrollPosition}\n          setScrollPosition={setScrollPosition}\n          key={tags.length}\n          data={tags}\n          row={RowTemplate}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CodingChallenge;\n","import React from 'react';\nimport './App.css';\nimport CodingChallenge from './codingChallenge/CodingChallenge';\n// https://www.notion.so/Challenge-for-d377a1a1de674c068a3b5c01726c15ae\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <a href=\"//#endregion\" className=\"brand\">\n          <img\n            src=\"https://uploads-ssl.webflow.com/5ea3bbe508815409b2adc81a/5ea3bc7a27484bf404a45aa5_logo_valiu.svg\"\n            alt=\"Valiu Logo\"\n          />\n        </a>\n      </header>\n      <section className=\"main-section\">\n        <CodingChallenge />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}